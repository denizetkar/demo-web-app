name: Versioning
on:
  push:
    branches: [master]

jobs:
  versioning_job:
    name: Create a tag based version
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout the git repo
        uses: actions/checkout@v4

      - name: Generate the version tag
        id: version-tag
        run: |
          VERSION=$(date +%Y-%m-%d_%H-%M-%S)_$(git rev-parse --short HEAD)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Setup git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Create the git tag
        run: |
          git tag -a "${{ steps.version-tag.outputs.VERSION }}" -m "Version ${{ steps.version-tag.outputs.VERSION }}"

      - name: Push the tagged version
        if: ${{ env.ACT != 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REMOTE_NAME=$(git remote | head -n 1)
          git push "$REMOTE_NAME" "${{ steps.version-tag.outputs.VERSION }}"

      - name: Setup app dependencies
        uses: ./.github/actions/setup-app-dependencies

      - name: Build the app
        run: npm run build --configuration=production

      - name: Create build artifact
        run: |
          cd dist
          zip -r ../${{ steps.version-tag.outputs.VERSION }}.zip demo-web-app/
          cd ..

      - name: Create GitHub Release
        if: ${{ env.ACT != 'true' }}
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ steps.version-tag.outputs.VERSION }}
          tag_name: ${{ steps.version-tag.outputs.VERSION }}
          files: ${{ steps.version-tag.outputs.VERSION }}.zip
          fail_on_unmatched_files: true
          draft: false
          prerelease: false
          generate_release_notes: true
          make_latest: true
